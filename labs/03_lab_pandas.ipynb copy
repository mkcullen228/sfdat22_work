{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "'''\n",
    "Part 1: UFO\n",
    "'''\n",
    "ufo = pd.read_csv('../data/ufo.csv')   # can also read csvs directly from the web!\n",
    "\n",
    "# 1. change the column names so that each name has no spaces\n",
    "#           and all lower case\n",
    "\n",
    "# 2. Show a bar chart of all shapes reported\n",
    "\n",
    "# 3. Show a dataframe that only displays the reportings from Utah\n",
    "\n",
    "# 4. Show a dataframe that only displays the reportings from Texas\n",
    "\n",
    "# 5. Show a dataframe that only displays the reportings from Utah OR Texas\n",
    "\n",
    "# 6. Which shape is reported most often?\n",
    "\n",
    "# 7. Plot number of sightings per day in 2014 (days should be in order!)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([u'city', u'colors_reported', u'shape_reported', u'state', u'time'], dtype='object')"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 1. change the column names so that each name has no spaces\n",
    "#           and all lower case\n",
    "ufo.rename(columns={'City':'city','Colors Reported':'colors_reported', 'Shape Reported':'shape_reported','State':'state','Time':'time'}, inplace=True)\n",
    "ufo.columns\n",
    "# ufo = or inplace = True actually alters the dataframe\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x11ae97450>"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11ae7b150>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 2. Show a bar chart of all shapes reported\n",
    "ufo.shape_reported.value_counts().plot(kind = 'bar', title = 'Shape Reported')\n",
    "plt.xlabel('Shape Reported')\n",
    "plt.ylabel('Number Reported')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>city</th>\n",
       "      <th>colors_reported</th>\n",
       "      <th>shape_reported</th>\n",
       "      <th>state</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Dallas</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SPHERE</td>\n",
       "      <td>TX</td>\n",
       "      <td>7/15/1945 14:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>Alice</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>3/15/1946 15:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Conroe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>OTHER</td>\n",
       "      <td>TX</td>\n",
       "      <td>1/10/1947 20:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>Borger</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/15/1948 16:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>Post</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>9/15/1949 21:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>San Marcos</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CYLINDER</td>\n",
       "      <td>TX</td>\n",
       "      <td>10/10/1949 20:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>Lackland AFB</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>10/10/1949 21:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>Fort Worth</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/15/1950 20:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>Galveston</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SPHERE</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/20/1950 17:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>Greenville</td>\n",
       "      <td>ORANGE</td>\n",
       "      <td>TRIANGLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>4/15/1952 16:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>Pecos</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/30/1952 3:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>201</th>\n",
       "      <td>Arlington</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>7/7/1952 13:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>213</th>\n",
       "      <td>Smithson's Valley</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIGAR</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/15/1952 17:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>Oklahoma</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIGAR</td>\n",
       "      <td>TX</td>\n",
       "      <td>1/1/1953 14:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>Fort Worth</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SPHERE</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/15/1953 13:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>Galveston</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIGAR</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/17/1953 7:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>Mauriceville</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>10/15/1953 14:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>257</th>\n",
       "      <td>Lackland Air Force Base</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>11/25/1953 4:25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>267</th>\n",
       "      <td>Houston</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/1/1954 0:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>280</th>\n",
       "      <td>Ellington AFB</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/15/1954 16:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>283</th>\n",
       "      <td>Thrifty</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIRCLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/25/1954 3:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>304</th>\n",
       "      <td>Beaumont</td>\n",
       "      <td>RED</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>9/9/1954 12:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>307</th>\n",
       "      <td>Blanco</td>\n",
       "      <td>NaN</td>\n",
       "      <td>OTHER</td>\n",
       "      <td>TX</td>\n",
       "      <td>10/15/1954 16:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>310</th>\n",
       "      <td>Thelma</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>11/14/1954 1:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>330</th>\n",
       "      <td>Lubbock</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIGAR</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/30/1955 13:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331</th>\n",
       "      <td>Dumas</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/30/1955 21:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>340</th>\n",
       "      <td>Eagle Pass</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIGAR</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/15/1955 0:01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>359</th>\n",
       "      <td>Edroy</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/15/1956 1:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>373</th>\n",
       "      <td>Houston</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TRIANGLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/30/1956 18:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>387</th>\n",
       "      <td>Edna</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIRCLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>10/10/1956 21:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79676</th>\n",
       "      <td>Austin</td>\n",
       "      <td>RED</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/1/2014 20:55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79697</th>\n",
       "      <td>Fort Worth</td>\n",
       "      <td>BLUE</td>\n",
       "      <td>CIRCLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/2/2014 5:58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79708</th>\n",
       "      <td>Von Ormy</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/2/2014 21:20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79746</th>\n",
       "      <td>Cleburne</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/3/2014 20:15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79763</th>\n",
       "      <td>Cypress</td>\n",
       "      <td>NaN</td>\n",
       "      <td>FIREBALL</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/4/2014 0:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79774</th>\n",
       "      <td>Port Neches</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/5/2014 0:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79790</th>\n",
       "      <td>Amarillo</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TRIANGLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/5/2014 23:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79803</th>\n",
       "      <td>Allen</td>\n",
       "      <td>BLUE</td>\n",
       "      <td>RECTANGLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/6/2014 22:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79848</th>\n",
       "      <td>Allen</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/9/2014 4:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79874</th>\n",
       "      <td>San Angelo</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/9/2014 23:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79891</th>\n",
       "      <td>Katy</td>\n",
       "      <td>NaN</td>\n",
       "      <td>FIREBALL</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/10/2014 23:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79919</th>\n",
       "      <td>McKinney</td>\n",
       "      <td>RED GREEN</td>\n",
       "      <td>RECTANGLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/13/2014 2:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79921</th>\n",
       "      <td>Cypress</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TRIANGLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/13/2014 8:45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79933</th>\n",
       "      <td>Comfort</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/13/2014 22:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79938</th>\n",
       "      <td>Pearland</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CONE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/14/2014 7:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79965</th>\n",
       "      <td>Austin</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIRCLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/15/2014 6:45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79969</th>\n",
       "      <td>Austin</td>\n",
       "      <td>RED</td>\n",
       "      <td>CIRCLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/15/2014 18:45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79986</th>\n",
       "      <td>Houston</td>\n",
       "      <td>YELLOW</td>\n",
       "      <td>CIRCLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/15/2014 23:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80038</th>\n",
       "      <td>Borger</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/17/2014 21:15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80075</th>\n",
       "      <td>Round Rock</td>\n",
       "      <td>ORANGE</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/19/2014 1:32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80113</th>\n",
       "      <td>Menard</td>\n",
       "      <td>RED</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/20/2014 21:40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80134</th>\n",
       "      <td>Morton</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SPHERE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/21/2014 20:15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80141</th>\n",
       "      <td>Port Neches</td>\n",
       "      <td>GREEN BLUE</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/21/2014 23:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80240</th>\n",
       "      <td>New Braunfels</td>\n",
       "      <td>RED</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/24/2014 21:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80241</th>\n",
       "      <td>Atascocita</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIRCLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/24/2014 21:15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80287</th>\n",
       "      <td>Lago Vista</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TRIANGLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/26/2014 3:35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80350</th>\n",
       "      <td>Houston</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TRIANGLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/28/2014 19:55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80414</th>\n",
       "      <td>Eustace</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/30/2014 23:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80476</th>\n",
       "      <td>Fort Worth</td>\n",
       "      <td>NaN</td>\n",
       "      <td>OTHER</td>\n",
       "      <td>TX</td>\n",
       "      <td>9/2/2014 16:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80534</th>\n",
       "      <td>Burleson</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>9/4/2014 22:30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4186 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                          city colors_reported shape_reported state  \\\n",
       "37                      Dallas             NaN         SPHERE    TX   \n",
       "43                       Alice             NaN           DISK    TX   \n",
       "49                      Conroe             NaN          OTHER    TX   \n",
       "92                      Borger             NaN           DISK    TX   \n",
       "114                       Post             NaN           DISK    TX   \n",
       "115                 San Marcos             NaN       CYLINDER    TX   \n",
       "116               Lackland AFB             NaN          LIGHT    TX   \n",
       "132                 Fort Worth             NaN           DISK    TX   \n",
       "134                  Galveston             NaN         SPHERE    TX   \n",
       "174                 Greenville          ORANGE       TRIANGLE    TX   \n",
       "189                      Pecos             NaN           DISK    TX   \n",
       "201                  Arlington             NaN           DISK    TX   \n",
       "213          Smithson's Valley             NaN          CIGAR    TX   \n",
       "223                   Oklahoma             NaN          CIGAR    TX   \n",
       "235                 Fort Worth             NaN         SPHERE    TX   \n",
       "237                  Galveston             NaN          CIGAR    TX   \n",
       "252               Mauriceville             NaN           DISK    TX   \n",
       "257    Lackland Air Force Base             NaN           DISK    TX   \n",
       "267                    Houston             NaN           DISK    TX   \n",
       "280              Ellington AFB             NaN           DISK    TX   \n",
       "283                    Thrifty             NaN         CIRCLE    TX   \n",
       "304                   Beaumont             RED           DISK    TX   \n",
       "307                     Blanco             NaN          OTHER    TX   \n",
       "310                     Thelma             NaN           DISK    TX   \n",
       "330                    Lubbock             NaN          CIGAR    TX   \n",
       "331                      Dumas             NaN          LIGHT    TX   \n",
       "340                 Eagle Pass             NaN          CIGAR    TX   \n",
       "359                      Edroy             NaN            NaN    TX   \n",
       "373                    Houston             NaN       TRIANGLE    TX   \n",
       "387                       Edna             NaN         CIRCLE    TX   \n",
       "...                        ...             ...            ...   ...   \n",
       "79676                   Austin             RED            NaN    TX   \n",
       "79697               Fort Worth            BLUE         CIRCLE    TX   \n",
       "79708                 Von Ormy             NaN          LIGHT    TX   \n",
       "79746                 Cleburne             NaN          LIGHT    TX   \n",
       "79763                  Cypress             NaN       FIREBALL    TX   \n",
       "79774              Port Neches             NaN          LIGHT    TX   \n",
       "79790                 Amarillo             NaN       TRIANGLE    TX   \n",
       "79803                    Allen            BLUE      RECTANGLE    TX   \n",
       "79848                    Allen             NaN          LIGHT    TX   \n",
       "79874               San Angelo             NaN          LIGHT    TX   \n",
       "79891                     Katy             NaN       FIREBALL    TX   \n",
       "79919                 McKinney       RED GREEN      RECTANGLE    TX   \n",
       "79921                  Cypress             NaN       TRIANGLE    TX   \n",
       "79933                  Comfort             NaN          LIGHT    TX   \n",
       "79938                 Pearland             NaN           CONE    TX   \n",
       "79965                   Austin             NaN         CIRCLE    TX   \n",
       "79969                   Austin             RED         CIRCLE    TX   \n",
       "79986                  Houston          YELLOW         CIRCLE    TX   \n",
       "80038                   Borger             NaN          LIGHT    TX   \n",
       "80075               Round Rock          ORANGE          LIGHT    TX   \n",
       "80113                   Menard             RED          LIGHT    TX   \n",
       "80134                   Morton             NaN         SPHERE    TX   \n",
       "80141              Port Neches      GREEN BLUE          LIGHT    TX   \n",
       "80240            New Braunfels             RED          LIGHT    TX   \n",
       "80241               Atascocita             NaN         CIRCLE    TX   \n",
       "80287               Lago Vista             NaN       TRIANGLE    TX   \n",
       "80350                  Houston             NaN       TRIANGLE    TX   \n",
       "80414                  Eustace             NaN          LIGHT    TX   \n",
       "80476               Fort Worth             NaN          OTHER    TX   \n",
       "80534                 Burleson             NaN          LIGHT    TX   \n",
       "\n",
       "                   time  \n",
       "37      7/15/1945 14:00  \n",
       "43      3/15/1946 15:30  \n",
       "49      1/10/1947 20:00  \n",
       "92      6/15/1948 16:00  \n",
       "114     9/15/1949 21:00  \n",
       "115    10/10/1949 20:30  \n",
       "116    10/10/1949 21:00  \n",
       "132     6/15/1950 20:00  \n",
       "134     6/20/1950 17:00  \n",
       "174     4/15/1952 16:00  \n",
       "189      6/30/1952 3:00  \n",
       "201      7/7/1952 13:00  \n",
       "213     8/15/1952 17:00  \n",
       "223      1/1/1953 14:00  \n",
       "235     6/15/1953 13:00  \n",
       "237      6/17/1953 7:30  \n",
       "252    10/15/1953 14:00  \n",
       "257     11/25/1953 4:25  \n",
       "267       6/1/1954 0:00  \n",
       "280     6/15/1954 16:30  \n",
       "283      6/25/1954 3:30  \n",
       "304      9/9/1954 12:30  \n",
       "307    10/15/1954 16:30  \n",
       "310     11/14/1954 1:00  \n",
       "330     6/30/1955 13:00  \n",
       "331     6/30/1955 21:00  \n",
       "340      8/15/1955 0:01  \n",
       "359      6/15/1956 1:00  \n",
       "373     6/30/1956 18:30  \n",
       "387    10/10/1956 21:00  \n",
       "...                 ...  \n",
       "79676    8/1/2014 20:55  \n",
       "79697     8/2/2014 5:58  \n",
       "79708    8/2/2014 21:20  \n",
       "79746    8/3/2014 20:15  \n",
       "79763     8/4/2014 0:00  \n",
       "79774     8/5/2014 0:00  \n",
       "79790    8/5/2014 23:00  \n",
       "79803    8/6/2014 22:30  \n",
       "79848     8/9/2014 4:00  \n",
       "79874    8/9/2014 23:30  \n",
       "79891   8/10/2014 23:00  \n",
       "79919    8/13/2014 2:05  \n",
       "79921    8/13/2014 8:45  \n",
       "79933   8/13/2014 22:00  \n",
       "79938    8/14/2014 7:30  \n",
       "79965    8/15/2014 6:45  \n",
       "79969   8/15/2014 18:45  \n",
       "79986   8/15/2014 23:30  \n",
       "80038   8/17/2014 21:15  \n",
       "80075    8/19/2014 1:32  \n",
       "80113   8/20/2014 21:40  \n",
       "80134   8/21/2014 20:15  \n",
       "80141   8/21/2014 23:00  \n",
       "80240   8/24/2014 21:05  \n",
       "80241   8/24/2014 21:15  \n",
       "80287    8/26/2014 3:35  \n",
       "80350   8/28/2014 19:55  \n",
       "80414   8/30/2014 23:00  \n",
       "80476    9/2/2014 16:05  \n",
       "80534    9/4/2014 22:30  \n",
       "\n",
       "[4186 rows x 5 columns]"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 3. Show a dataframe that only displays the reportings from Utah\n",
    "ufo[ufo.state == 'UT']\n",
    "# 4. Show a dataframe that only displays the reportings from Texas\n",
    "ufo[ufo.state == \"TX\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>city</th>\n",
       "      <th>colors_reported</th>\n",
       "      <th>shape_reported</th>\n",
       "      <th>state</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Ft. Duschene</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>UT</td>\n",
       "      <td>6/30/1944 10:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Dallas</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SPHERE</td>\n",
       "      <td>TX</td>\n",
       "      <td>7/15/1945 14:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>Alice</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>3/15/1946 15:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Conroe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>OTHER</td>\n",
       "      <td>TX</td>\n",
       "      <td>1/10/1947 20:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>Borger</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/15/1948 16:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>Post</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>9/15/1949 21:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>San Marcos</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CYLINDER</td>\n",
       "      <td>TX</td>\n",
       "      <td>10/10/1949 20:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>Lackland AFB</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>10/10/1949 21:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>Fort Worth</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/15/1950 20:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>Galveston</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SPHERE</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/20/1950 17:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164</th>\n",
       "      <td>Provo</td>\n",
       "      <td>BLUE</td>\n",
       "      <td>DISK</td>\n",
       "      <td>UT</td>\n",
       "      <td>7/10/1951 23:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>Salt Lake City</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>UT</td>\n",
       "      <td>1/1/1952 0:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>Greenville</td>\n",
       "      <td>ORANGE</td>\n",
       "      <td>TRIANGLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>4/15/1952 16:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>Pecos</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/30/1952 3:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>201</th>\n",
       "      <td>Arlington</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>7/7/1952 13:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>213</th>\n",
       "      <td>Smithson's Valley</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIGAR</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/15/1952 17:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>Oklahoma</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIGAR</td>\n",
       "      <td>TX</td>\n",
       "      <td>1/1/1953 14:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>Fort Worth</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SPHERE</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/15/1953 13:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>Galveston</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIGAR</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/17/1953 7:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>Mauriceville</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>10/15/1953 14:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>257</th>\n",
       "      <td>Lackland Air Force Base</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>11/25/1953 4:25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>267</th>\n",
       "      <td>Houston</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/1/1954 0:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>280</th>\n",
       "      <td>Ellington AFB</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/15/1954 16:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>283</th>\n",
       "      <td>Thrifty</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIRCLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/25/1954 3:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>304</th>\n",
       "      <td>Beaumont</td>\n",
       "      <td>RED</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>9/9/1954 12:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>307</th>\n",
       "      <td>Blanco</td>\n",
       "      <td>NaN</td>\n",
       "      <td>OTHER</td>\n",
       "      <td>TX</td>\n",
       "      <td>10/15/1954 16:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>310</th>\n",
       "      <td>Thelma</td>\n",
       "      <td>NaN</td>\n",
       "      <td>DISK</td>\n",
       "      <td>TX</td>\n",
       "      <td>11/14/1954 1:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>330</th>\n",
       "      <td>Lubbock</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIGAR</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/30/1955 13:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331</th>\n",
       "      <td>Dumas</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>6/30/1955 21:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>340</th>\n",
       "      <td>Eagle Pass</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIGAR</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/15/1955 0:01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79848</th>\n",
       "      <td>Allen</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/9/2014 4:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79874</th>\n",
       "      <td>San Angelo</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/9/2014 23:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79891</th>\n",
       "      <td>Katy</td>\n",
       "      <td>NaN</td>\n",
       "      <td>FIREBALL</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/10/2014 23:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79919</th>\n",
       "      <td>McKinney</td>\n",
       "      <td>RED GREEN</td>\n",
       "      <td>RECTANGLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/13/2014 2:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79921</th>\n",
       "      <td>Cypress</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TRIANGLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/13/2014 8:45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79933</th>\n",
       "      <td>Comfort</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/13/2014 22:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79938</th>\n",
       "      <td>Pearland</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CONE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/14/2014 7:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79964</th>\n",
       "      <td>West Valley</td>\n",
       "      <td>BLUE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>UT</td>\n",
       "      <td>8/15/2014 6:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79965</th>\n",
       "      <td>Austin</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIRCLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/15/2014 6:45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79969</th>\n",
       "      <td>Austin</td>\n",
       "      <td>RED</td>\n",
       "      <td>CIRCLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/15/2014 18:45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79986</th>\n",
       "      <td>Houston</td>\n",
       "      <td>YELLOW</td>\n",
       "      <td>CIRCLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/15/2014 23:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80012</th>\n",
       "      <td>Salt Lake City</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TRIANGLE</td>\n",
       "      <td>UT</td>\n",
       "      <td>8/16/2014 21:45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80038</th>\n",
       "      <td>Borger</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/17/2014 21:15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80045</th>\n",
       "      <td>Kearns</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>UT</td>\n",
       "      <td>8/17/2014 22:57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80075</th>\n",
       "      <td>Round Rock</td>\n",
       "      <td>ORANGE</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/19/2014 1:32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80101</th>\n",
       "      <td>Canyonlands National Park</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>UT</td>\n",
       "      <td>8/20/2014 3:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80113</th>\n",
       "      <td>Menard</td>\n",
       "      <td>RED</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/20/2014 21:40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80134</th>\n",
       "      <td>Morton</td>\n",
       "      <td>NaN</td>\n",
       "      <td>SPHERE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/21/2014 20:15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80137</th>\n",
       "      <td>Lehi</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>UT</td>\n",
       "      <td>8/21/2014 21:50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80141</th>\n",
       "      <td>Port Neches</td>\n",
       "      <td>GREEN BLUE</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/21/2014 23:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80240</th>\n",
       "      <td>New Braunfels</td>\n",
       "      <td>RED</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/24/2014 21:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80241</th>\n",
       "      <td>Atascocita</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIRCLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/24/2014 21:15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80254</th>\n",
       "      <td>Murray</td>\n",
       "      <td>RED</td>\n",
       "      <td>VARIOUS</td>\n",
       "      <td>UT</td>\n",
       "      <td>8/25/2014 10:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80287</th>\n",
       "      <td>Lago Vista</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TRIANGLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/26/2014 3:35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80344</th>\n",
       "      <td>Salt Lake City</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>UT</td>\n",
       "      <td>8/28/2014 19:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80350</th>\n",
       "      <td>Houston</td>\n",
       "      <td>NaN</td>\n",
       "      <td>TRIANGLE</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/28/2014 19:55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80414</th>\n",
       "      <td>Eustace</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>8/30/2014 23:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80476</th>\n",
       "      <td>Fort Worth</td>\n",
       "      <td>NaN</td>\n",
       "      <td>OTHER</td>\n",
       "      <td>TX</td>\n",
       "      <td>9/2/2014 16:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80486</th>\n",
       "      <td>Minot</td>\n",
       "      <td>NaN</td>\n",
       "      <td>CIRCLE</td>\n",
       "      <td>UT</td>\n",
       "      <td>9/3/2014 0:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80534</th>\n",
       "      <td>Burleson</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LIGHT</td>\n",
       "      <td>TX</td>\n",
       "      <td>9/4/2014 22:30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5009 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                            city colors_reported shape_reported state  \\\n",
       "29                  Ft. Duschene             NaN           DISK    UT   \n",
       "37                        Dallas             NaN         SPHERE    TX   \n",
       "43                         Alice             NaN           DISK    TX   \n",
       "49                        Conroe             NaN          OTHER    TX   \n",
       "92                        Borger             NaN           DISK    TX   \n",
       "114                         Post             NaN           DISK    TX   \n",
       "115                   San Marcos             NaN       CYLINDER    TX   \n",
       "116                 Lackland AFB             NaN          LIGHT    TX   \n",
       "132                   Fort Worth             NaN           DISK    TX   \n",
       "134                    Galveston             NaN         SPHERE    TX   \n",
       "164                        Provo            BLUE           DISK    UT   \n",
       "170               Salt Lake City             NaN            NaN    UT   \n",
       "174                   Greenville          ORANGE       TRIANGLE    TX   \n",
       "189                        Pecos             NaN           DISK    TX   \n",
       "201                    Arlington             NaN           DISK    TX   \n",
       "213            Smithson's Valley             NaN          CIGAR    TX   \n",
       "223                     Oklahoma             NaN          CIGAR    TX   \n",
       "235                   Fort Worth             NaN         SPHERE    TX   \n",
       "237                    Galveston             NaN          CIGAR    TX   \n",
       "252                 Mauriceville             NaN           DISK    TX   \n",
       "257      Lackland Air Force Base             NaN           DISK    TX   \n",
       "267                      Houston             NaN           DISK    TX   \n",
       "280                Ellington AFB             NaN           DISK    TX   \n",
       "283                      Thrifty             NaN         CIRCLE    TX   \n",
       "304                     Beaumont             RED           DISK    TX   \n",
       "307                       Blanco             NaN          OTHER    TX   \n",
       "310                       Thelma             NaN           DISK    TX   \n",
       "330                      Lubbock             NaN          CIGAR    TX   \n",
       "331                        Dumas             NaN          LIGHT    TX   \n",
       "340                   Eagle Pass             NaN          CIGAR    TX   \n",
       "...                          ...             ...            ...   ...   \n",
       "79848                      Allen             NaN          LIGHT    TX   \n",
       "79874                 San Angelo             NaN          LIGHT    TX   \n",
       "79891                       Katy             NaN       FIREBALL    TX   \n",
       "79919                   McKinney       RED GREEN      RECTANGLE    TX   \n",
       "79921                    Cypress             NaN       TRIANGLE    TX   \n",
       "79933                    Comfort             NaN          LIGHT    TX   \n",
       "79938                   Pearland             NaN           CONE    TX   \n",
       "79964                West Valley            BLUE            NaN    UT   \n",
       "79965                     Austin             NaN         CIRCLE    TX   \n",
       "79969                     Austin             RED         CIRCLE    TX   \n",
       "79986                    Houston          YELLOW         CIRCLE    TX   \n",
       "80012             Salt Lake City             NaN       TRIANGLE    UT   \n",
       "80038                     Borger             NaN          LIGHT    TX   \n",
       "80045                     Kearns             NaN          LIGHT    UT   \n",
       "80075                 Round Rock          ORANGE          LIGHT    TX   \n",
       "80101  Canyonlands National Park             NaN            NaN    UT   \n",
       "80113                     Menard             RED          LIGHT    TX   \n",
       "80134                     Morton             NaN         SPHERE    TX   \n",
       "80137                       Lehi             NaN            NaN    UT   \n",
       "80141                Port Neches      GREEN BLUE          LIGHT    TX   \n",
       "80240              New Braunfels             RED          LIGHT    TX   \n",
       "80241                 Atascocita             NaN         CIRCLE    TX   \n",
       "80254                     Murray             RED        VARIOUS    UT   \n",
       "80287                 Lago Vista             NaN       TRIANGLE    TX   \n",
       "80344             Salt Lake City             NaN          LIGHT    UT   \n",
       "80350                    Houston             NaN       TRIANGLE    TX   \n",
       "80414                    Eustace             NaN          LIGHT    TX   \n",
       "80476                 Fort Worth             NaN          OTHER    TX   \n",
       "80486                      Minot             NaN         CIRCLE    UT   \n",
       "80534                   Burleson             NaN          LIGHT    TX   \n",
       "\n",
       "                   time  \n",
       "29      6/30/1944 10:00  \n",
       "37      7/15/1945 14:00  \n",
       "43      3/15/1946 15:30  \n",
       "49      1/10/1947 20:00  \n",
       "92      6/15/1948 16:00  \n",
       "114     9/15/1949 21:00  \n",
       "115    10/10/1949 20:30  \n",
       "116    10/10/1949 21:00  \n",
       "132     6/15/1950 20:00  \n",
       "134     6/20/1950 17:00  \n",
       "164     7/10/1951 23:30  \n",
       "170       1/1/1952 0:00  \n",
       "174     4/15/1952 16:00  \n",
       "189      6/30/1952 3:00  \n",
       "201      7/7/1952 13:00  \n",
       "213     8/15/1952 17:00  \n",
       "223      1/1/1953 14:00  \n",
       "235     6/15/1953 13:00  \n",
       "237      6/17/1953 7:30  \n",
       "252    10/15/1953 14:00  \n",
       "257     11/25/1953 4:25  \n",
       "267       6/1/1954 0:00  \n",
       "280     6/15/1954 16:30  \n",
       "283      6/25/1954 3:30  \n",
       "304      9/9/1954 12:30  \n",
       "307    10/15/1954 16:30  \n",
       "310     11/14/1954 1:00  \n",
       "330     6/30/1955 13:00  \n",
       "331     6/30/1955 21:00  \n",
       "340      8/15/1955 0:01  \n",
       "...                 ...  \n",
       "79848     8/9/2014 4:00  \n",
       "79874    8/9/2014 23:30  \n",
       "79891   8/10/2014 23:00  \n",
       "79919    8/13/2014 2:05  \n",
       "79921    8/13/2014 8:45  \n",
       "79933   8/13/2014 22:00  \n",
       "79938    8/14/2014 7:30  \n",
       "79964    8/15/2014 6:00  \n",
       "79965    8/15/2014 6:45  \n",
       "79969   8/15/2014 18:45  \n",
       "79986   8/15/2014 23:30  \n",
       "80012   8/16/2014 21:45  \n",
       "80038   8/17/2014 21:15  \n",
       "80045   8/17/2014 22:57  \n",
       "80075    8/19/2014 1:32  \n",
       "80101    8/20/2014 3:00  \n",
       "80113   8/20/2014 21:40  \n",
       "80134   8/21/2014 20:15  \n",
       "80137   8/21/2014 21:50  \n",
       "80141   8/21/2014 23:00  \n",
       "80240   8/24/2014 21:05  \n",
       "80241   8/24/2014 21:15  \n",
       "80254   8/25/2014 10:00  \n",
       "80287    8/26/2014 3:35  \n",
       "80344   8/28/2014 19:00  \n",
       "80350   8/28/2014 19:55  \n",
       "80414   8/30/2014 23:00  \n",
       "80476    9/2/2014 16:05  \n",
       "80486     9/3/2014 0:00  \n",
       "80534    9/4/2014 22:30  \n",
       "\n",
       "[5009 rows x 5 columns]"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 5. Show a dataframe that only displays the reportings from Utah OR Texas\n",
    "# ufo[(ufo.state == 'UT' | ufo.state == 'TX')]\n",
    "ufo.query('state == \"UT\" or state == \"TX\"')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'LIGHT'"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 6. Which shape is reported most often?\n",
    "ufo.shape_reported.value_counts().index[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'DataFrame' object has no attribute 'date'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-188-4a52afd27749>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# 7. Plot number of sightings per day in 2014 (days should be in order!)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mufo2014\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mufo\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mufo\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdate\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m2014\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mufo2014\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Users/mcullen/anaconda/lib/python2.7/site-packages/pandas/core/generic.pyc\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, name)\u001b[0m\n\u001b[1;32m   2667\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_info_axis\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2668\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2669\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mobject\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__getattribute__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2670\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2671\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__setattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mAttributeError\u001b[0m: 'DataFrame' object has no attribute 'date'"
     ]
    }
   ],
   "source": [
    "# 7. Plot number of sightings per day in 2014 (days should be in order!)\n",
    "# dateparse = lambda x: pd.datetime.strptime(x, '%Y-%m-%d %H:%M:%S')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([u'sepal_length', u'sepal_width', u'petal_length', u'petal_width',\n",
       "       u'species'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "Part 2: IRIS\n",
    "'''\n",
    "\n",
    "iris = pd.read_csv('../data/iris.csv')   # can also read csvs directly from the web!\n",
    "\n",
    "# 1. Show the mean petal length by flower species\n",
    "\n",
    "# 2. Show the mean sepal width by flower species\n",
    "\n",
    "# 3. Use the groupby to show both #1 and #2 in one dataframe\n",
    "\n",
    "# 4. Create a scatter plot plotting petal length against petal width\n",
    "#    Use the color_flowers function to \n",
    "\n",
    "# 5. Show flowers with sepal length over 5 and petal length under 1.5\n",
    "\n",
    "# 6. Show setosa flowers with petal width of exactly 0.2\n",
    "\n",
    "# 7. Write a function to predict the species for each observation\n",
    "\n",
    "def classify_iris(data):\n",
    "    if False:\n",
    "        return 'Iris-setosa'\n",
    "    elif False:\n",
    "        return 'Iris-versicolor'\n",
    "    else:\n",
    "        return 'Iris-virginica'\n",
    "\n",
    "# example use: \n",
    "# classify_iris([0,3,2.1,3.2]) == 'Iris-virginica'\n",
    "# assume the order is the same as the dataframe, so:\n",
    "# [sepal_length', 'sepal_width', 'petal_length', 'petal_width']\n",
    "\n",
    "\n",
    "# make predictions and store as preds\n",
    "preds = iris.drop('species', axis=1).apply(classify_iris, axis = 1)\n",
    "\n",
    "\n",
    "preds\n",
    "\n",
    "\n",
    "# test your function: compute accuracy of your prediction\n",
    "(preds == iris['species']).sum() / float(iris.shape[0])\n",
    "iris.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "species\n",
       "Iris-setosa        1.464\n",
       "Iris-versicolor    4.260\n",
       "Iris-virginica     5.552\n",
       "Name: petal_length, dtype: float64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 1. Show the mean petal length by flower species\n",
    "iris.groupby('species').petal_length.mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "species\n",
       "Iris-setosa        5.006\n",
       "Iris-versicolor    5.936\n",
       "Iris-virginica     6.588\n",
       "Name: sepal_length, dtype: float64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 2. Show the mean sepal width by flower species\n",
    "iris.groupby('species').sepal_length.mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>petal_length</th>\n",
       "      <th>sepal_length</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>species</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Iris-setosa</th>\n",
       "      <td>1.464</td>\n",
       "      <td>5.006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iris-versicolor</th>\n",
       "      <td>4.260</td>\n",
       "      <td>5.936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iris-virginica</th>\n",
       "      <td>5.552</td>\n",
       "      <td>6.588</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 petal_length  sepal_length\n",
       "species                                    \n",
       "Iris-setosa             1.464         5.006\n",
       "Iris-versicolor         4.260         5.936\n",
       "Iris-virginica          5.552         6.588"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 3. Use the groupby to show both #1 and #2 in one dataframe\n",
    "iris.groupby('species')['petal_length', 'sepal_length'].mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x112f846d0>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x112f84490>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 4. Create a scatter plot plotting petal length against petal width\n",
    "#    Use the color_flowers function to \n",
    "\n",
    "def color_flower(f):\n",
    "    if f == \"Iris-setosa\":\n",
    "        return 'b'\n",
    "    elif f == \"Iris-virginica\":\n",
    "        return 'r'\n",
    "    return 'g'\n",
    "\n",
    "colors = iris.species.apply(color_flower)\n",
    "\n",
    "\n",
    "iris.plot(x='petal_length', y='petal_width', kind='scatter', c=colors)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "      <th>species</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>5.8</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>5.4</td>\n",
       "      <td>3.9</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.4</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.3</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>5.2</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>5.5</td>\n",
       "      <td>4.2</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>5.5</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    sepal_length  sepal_width  petal_length  petal_width      species\n",
       "0            5.1          3.5           1.4          0.2  Iris-setosa\n",
       "14           5.8          4.0           1.2          0.2  Iris-setosa\n",
       "16           5.4          3.9           1.3          0.4  Iris-setosa\n",
       "17           5.1          3.5           1.4          0.3  Iris-setosa\n",
       "28           5.2          3.4           1.4          0.2  Iris-setosa\n",
       "33           5.5          4.2           1.4          0.2  Iris-setosa\n",
       "36           5.5          3.5           1.3          0.2  Iris-setosa"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 5. Show flowers with sepal length over 5 and petal length under 1.5\n",
    "# d = iris[iris.sepal_length>5]\n",
    "# d[d.petal_length < 1.5]\n",
    "iris.query('sepal_length > 5 and petal_length < 1.5')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>species</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Iris-setosa</th>\n",
       "      <td>1.9</td>\n",
       "      <td>0.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iris-versicolor</th>\n",
       "      <td>5.1</td>\n",
       "      <td>1.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iris-virginica</th>\n",
       "      <td>6.9</td>\n",
       "      <td>2.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 petal_length  petal_width\n",
       "species                                   \n",
       "Iris-setosa               1.9          0.6\n",
       "Iris-versicolor           5.1          1.8\n",
       "Iris-virginica            6.9          2.5"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "iris.groupby('species')['petal_length', 'petal_width'].max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "      <th>species</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>4.4</td>\n",
       "      <td>2.9</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>5.4</td>\n",
       "      <td>3.7</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>4.8</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>5.8</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>5.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>4.8</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.9</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>5.2</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>5.2</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>4.8</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>5.5</td>\n",
       "      <td>4.2</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>5.5</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>4.4</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>4.4</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.8</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>5.3</td>\n",
       "      <td>3.7</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.3</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    sepal_length  sepal_width  petal_length  petal_width      species\n",
       "0            5.1          3.5           1.4          0.2  Iris-setosa\n",
       "1            4.9          3.0           1.4          0.2  Iris-setosa\n",
       "2            4.7          3.2           1.3          0.2  Iris-setosa\n",
       "3            4.6          3.1           1.5          0.2  Iris-setosa\n",
       "4            5.0          3.6           1.4          0.2  Iris-setosa\n",
       "7            5.0          3.4           1.5          0.2  Iris-setosa\n",
       "8            4.4          2.9           1.4          0.2  Iris-setosa\n",
       "10           5.4          3.7           1.5          0.2  Iris-setosa\n",
       "11           4.8          3.4           1.6          0.2  Iris-setosa\n",
       "14           5.8          4.0           1.2          0.2  Iris-setosa\n",
       "20           5.4          3.4           1.7          0.2  Iris-setosa\n",
       "22           4.6          3.6           1.0          0.2  Iris-setosa\n",
       "24           4.8          3.4           1.9          0.2  Iris-setosa\n",
       "25           5.0          3.0           1.6          0.2  Iris-setosa\n",
       "27           5.2          3.5           1.5          0.2  Iris-setosa\n",
       "28           5.2          3.4           1.4          0.2  Iris-setosa\n",
       "29           4.7          3.2           1.6          0.2  Iris-setosa\n",
       "30           4.8          3.1           1.6          0.2  Iris-setosa\n",
       "33           5.5          4.2           1.4          0.2  Iris-setosa\n",
       "35           5.0          3.2           1.2          0.2  Iris-setosa\n",
       "36           5.5          3.5           1.3          0.2  Iris-setosa\n",
       "38           4.4          3.0           1.3          0.2  Iris-setosa\n",
       "39           5.1          3.4           1.5          0.2  Iris-setosa\n",
       "42           4.4          3.2           1.3          0.2  Iris-setosa\n",
       "46           5.1          3.8           1.6          0.2  Iris-setosa\n",
       "47           4.6          3.2           1.4          0.2  Iris-setosa\n",
       "48           5.3          3.7           1.5          0.2  Iris-setosa\n",
       "49           5.0          3.3           1.4          0.2  Iris-setosa"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 6. Show setosa flowers with petal width of exactly 0.2\n",
    "# d = iris[iris.species == 'Iris-setosa']\n",
    "# d[d.petal_width == 0.2]\n",
    "iris.query('species == \"Iris-setosa\" and petal_width == 0.2')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.61333333333333329"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 7. Write a function to predict the species for each observation\n",
    "\n",
    "def classify_iris(data):\n",
    "    petal_length = data[2]\n",
    "    petal_width = data[3]\n",
    "    if petal_length < 1 and petal_width < 3:\n",
    "         return 'Iris-setosa'\n",
    "    elif petal_length <= 5.1 and petal_width <= 1.8:\n",
    "        return 'Iris-versicolor'\n",
    "    else:\n",
    "        return 'Iris-virginica'\n",
    "    \n",
    "# classify_iris([0,3,2.1,3.2])\n",
    "\n",
    "\n",
    "# make predictions and store as preds\n",
    "preds = iris.drop('species', axis=1).apply(classify_iris, axis = 1)\n",
    "\n",
    "preds\n",
    "\n",
    "# test your function: compute accuracy of your prediction\n",
    "(preds == iris['species']).sum() / float(iris.shape[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([u'game_id', u'minute', u'player', u'team1score', u'team2score'], dtype='object')"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "Part 3: FIFA GOALS\n",
    "'''\n",
    "\n",
    "goals = pd.read_csv('../data/fifa_goals.csv')\n",
    "\n",
    "# 1. Some elements in the minute column have a  '+', remove it and cast each element as an int!\n",
    "\n",
    "# 2. Show goals scored in the first 5 minutes of a game\n",
    "\n",
    "# 3. Show goals scored after the regulation 90 minutes is over\n",
    "\n",
    "# 4. Show the top scoring players\n",
    "\n",
    "# 5. Show a histogram (distribution) of minutes with 20 bins\n",
    "\n",
    "# 6. Show a histogram of the number of goals scored by players\n",
    " \n",
    "goals.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_id</th>\n",
       "      <th>minute</th>\n",
       "      <th>player</th>\n",
       "      <th>team1score</th>\n",
       "      <th>team2score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>Schiavio</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>Orsi</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>Schiavio</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>57</td>\n",
       "      <td>Donelli</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>63</td>\n",
       "      <td>Ferrari</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>64</td>\n",
       "      <td>Schiavio</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>69</td>\n",
       "      <td>Orsi</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1</td>\n",
       "      <td>90</td>\n",
       "      <td>Meazza</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>Nicolas</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2</td>\n",
       "      <td>44</td>\n",
       "      <td>Sindelar</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   game_id  minute    player  team1score  team2score\n",
       "0        1      18  Schiavio           1           0\n",
       "1        1      20      Orsi           2           0\n",
       "2        1      29  Schiavio           3           0\n",
       "3        1      57   Donelli           3           1\n",
       "4        1      63   Ferrari           4           1\n",
       "5        1      64  Schiavio           5           1\n",
       "6        1      69      Orsi           6           1\n",
       "7        1      90    Meazza           7           1\n",
       "8        2      18   Nicolas           0           1\n",
       "9        2      44  Sindelar           1           1"
      ]
     },
     "execution_count": 174,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 1. Some elements in the minute column have a  '+', remove it and cast each element as an int!\n",
    "goals.minute = [col.strip('+') for col in goals.minute]\n",
    "goals.game_id = goals.game_id.astype(int)\n",
    "goals.minute = goals.minute.astype(int)\n",
    "goals.team1score = goals.team1score.astype(int)\n",
    "goals.team2score = goals.team2score.astype(int)\n",
    "\n",
    "goals.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_id</th>\n",
       "      <th>minute</th>\n",
       "      <th>player</th>\n",
       "      <th>team1score</th>\n",
       "      <th>team2score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>Belis</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>Lehner</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>19</td>\n",
       "      <td>3</td>\n",
       "      <td>Corbatta</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>23</td>\n",
       "      <td>4</td>\n",
       "      <td>Bozsik</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>27</td>\n",
       "      <td>4</td>\n",
       "      <td>McParland</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>28</td>\n",
       "      <td>3</td>\n",
       "      <td>AgÃ¼ero</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>40</td>\n",
       "      <td>3</td>\n",
       "      <td>VavÃ¡</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>50</td>\n",
       "      <td>2</td>\n",
       "      <td>VavÃ¡</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>52</td>\n",
       "      <td>3</td>\n",
       "      <td>Liedholm</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200</th>\n",
       "      <td>57</td>\n",
       "      <td>4</td>\n",
       "      <td>Nyilasi</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>221</th>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>Robson</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>297</th>\n",
       "      <td>90</td>\n",
       "      <td>4</td>\n",
       "      <td>Boniek</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>357</th>\n",
       "      <td>111</td>\n",
       "      <td>1</td>\n",
       "      <td>JosÃ© Augusto</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>369</th>\n",
       "      <td>115</td>\n",
       "      <td>2</td>\n",
       "      <td>Bene</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>404</th>\n",
       "      <td>130</td>\n",
       "      <td>1</td>\n",
       "      <td>Park Seung-jin</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>442</th>\n",
       "      <td>204</td>\n",
       "      <td>1</td>\n",
       "      <td>DeÅu</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>447</th>\n",
       "      <td>206</td>\n",
       "      <td>3</td>\n",
       "      <td>Subiabre</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>488</th>\n",
       "      <td>217</td>\n",
       "      <td>4</td>\n",
       "      <td>VujadinoviÄ</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>509</th>\n",
       "      <td>223</td>\n",
       "      <td>2</td>\n",
       "      <td>Yakovenko</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>510</th>\n",
       "      <td>223</td>\n",
       "      <td>4</td>\n",
       "      <td>Alejnikov</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>522</th>\n",
       "      <td>229</td>\n",
       "      <td>4</td>\n",
       "      <td>Alzamendi</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>531</th>\n",
       "      <td>234</td>\n",
       "      <td>2</td>\n",
       "      <td>EsterhÃ¡zy</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>534</th>\n",
       "      <td>237</td>\n",
       "      <td>3</td>\n",
       "      <td>Flores</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>536</th>\n",
       "      <td>238</td>\n",
       "      <td>2</td>\n",
       "      <td>ButragueÃ±o</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>563</th>\n",
       "      <td>246</td>\n",
       "      <td>3</td>\n",
       "      <td>Valdano</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>635</th>\n",
       "      <td>272</td>\n",
       "      <td>2</td>\n",
       "      <td>Ferraris</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>638</th>\n",
       "      <td>273</td>\n",
       "      <td>1</td>\n",
       "      <td>Veinante</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>699</th>\n",
       "      <td>286</td>\n",
       "      <td>1</td>\n",
       "      <td>Nyberg</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>735</th>\n",
       "      <td>294</td>\n",
       "      <td>3</td>\n",
       "      <td>Alfredo</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>751</th>\n",
       "      <td>299</td>\n",
       "      <td>4</td>\n",
       "      <td>Ademir</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1094</th>\n",
       "      <td>420</td>\n",
       "      <td>2</td>\n",
       "      <td>JÃ¸rgensen</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1231</th>\n",
       "      <td>480</td>\n",
       "      <td>1</td>\n",
       "      <td>Lacombe</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1281</th>\n",
       "      <td>501</td>\n",
       "      <td>2</td>\n",
       "      <td>VelÃ¡squez</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1303</th>\n",
       "      <td>508</td>\n",
       "      <td>3</td>\n",
       "      <td>Abramczik</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1341</th>\n",
       "      <td>519</td>\n",
       "      <td>3</td>\n",
       "      <td>Gamarra [o.g.]</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1350</th>\n",
       "      <td>524</td>\n",
       "      <td>4</td>\n",
       "      <td>Pauleta</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1390</th>\n",
       "      <td>541</td>\n",
       "      <td>2</td>\n",
       "      <td>Gyan</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1400</th>\n",
       "      <td>547</td>\n",
       "      <td>4</td>\n",
       "      <td>Rusol</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1408</th>\n",
       "      <td>549</td>\n",
       "      <td>4</td>\n",
       "      <td>Klose</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1440</th>\n",
       "      <td>560</td>\n",
       "      <td>2</td>\n",
       "      <td>Srna</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1450</th>\n",
       "      <td>565</td>\n",
       "      <td>4</td>\n",
       "      <td>Podolski</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1505</th>\n",
       "      <td>591</td>\n",
       "      <td>3</td>\n",
       "      <td>PetrÃ¡Å¡</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1580</th>\n",
       "      <td>617</td>\n",
       "      <td>4</td>\n",
       "      <td>Gerrard</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1703</th>\n",
       "      <td>671</td>\n",
       "      <td>3</td>\n",
       "      <td>MÃ¼ller</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1729</th>\n",
       "      <td>680</td>\n",
       "      <td>4</td>\n",
       "      <td>Facundo</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1758</th>\n",
       "      <td>692</td>\n",
       "      <td>1</td>\n",
       "      <td>Albert</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1778</th>\n",
       "      <td>698</td>\n",
       "      <td>1</td>\n",
       "      <td>Mora</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1781</th>\n",
       "      <td>699</td>\n",
       "      <td>1</td>\n",
       "      <td>MaÅ¡ek</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1903</th>\n",
       "      <td>746</td>\n",
       "      <td>2</td>\n",
       "      <td>Neeskens [p.]</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1947</th>\n",
       "      <td>762</td>\n",
       "      <td>4</td>\n",
       "      <td>OâBrien</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1965</th>\n",
       "      <td>770</td>\n",
       "      <td>4</td>\n",
       "      <td>Nomvethe</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2002</th>\n",
       "      <td>785</td>\n",
       "      <td>4</td>\n",
       "      <td>RaÃºl</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2031</th>\n",
       "      <td>793</td>\n",
       "      <td>3</td>\n",
       "      <td>Olisadebe</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2060</th>\n",
       "      <td>809</td>\n",
       "      <td>1</td>\n",
       "      <td>Hakan ÅÃ¼kÃ¼r</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2088</th>\n",
       "      <td>817</td>\n",
       "      <td>2</td>\n",
       "      <td>Suat</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2093</th>\n",
       "      <td>818</td>\n",
       "      <td>4</td>\n",
       "      <td>Anoul</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2110</th>\n",
       "      <td>821</td>\n",
       "      <td>2</td>\n",
       "      <td>Stojaspal</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2111</th>\n",
       "      <td>821</td>\n",
       "      <td>4</td>\n",
       "      <td>Probst</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2120</th>\n",
       "      <td>823</td>\n",
       "      <td>3</td>\n",
       "      <td>Kocsis</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2177</th>\n",
       "      <td>831</td>\n",
       "      <td>4</td>\n",
       "      <td>Hidegkuti</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>67 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      game_id  minute          player  team1score  team2score\n",
       "28          6       4           Belis           0           1\n",
       "62         16       1          Lehner           1           0\n",
       "73         19       3        Corbatta           0           1\n",
       "90         23       4          Bozsik           1           0\n",
       "103        27       4       McParland           0           1\n",
       "107        28       3         AgÃ¼ero           1           0\n",
       "148        40       3           VavÃ¡           1           0\n",
       "173        50       2           VavÃ¡           1           0\n",
       "189        52       3        Liedholm           0           1\n",
       "200        57       4         Nyilasi           1           0\n",
       "221        60       1          Robson           1           0\n",
       "297        90       4          Boniek           1           0\n",
       "357       111       1   JosÃ© Augusto           1           0\n",
       "369       115       2            Bene           1           0\n",
       "404       130       1  Park Seung-jin           0           1\n",
       "442       204       1           DeÅu           1           0\n",
       "447       206       3        Subiabre           1           0\n",
       "488       217       4    VujadinoviÄ           0           1\n",
       "509       223       2       Yakovenko           1           0\n",
       "510       223       4       Alejnikov           2           0\n",
       "522       229       4       Alzamendi           1           0\n",
       "531       234       2      EsterhÃ¡zy           1           0\n",
       "534       237       3          Flores           1           0\n",
       "536       238       2     ButragueÃ±o           0           1\n",
       "563       246       3         Valdano           1           0\n",
       "635       272       2        Ferraris           1           0\n",
       "638       273       1        Veinante           1           0\n",
       "699       286       1          Nyberg           0           1\n",
       "735       294       3         Alfredo           1           0\n",
       "751       299       4          Ademir           1           0\n",
       "...       ...     ...             ...         ...         ...\n",
       "1094      420       2      JÃ¸rgensen           0           1\n",
       "1231      480       1         Lacombe           0           1\n",
       "1281      501       2      VelÃ¡squez           1           0\n",
       "1303      508       3       Abramczik           1           0\n",
       "1341      519       3  Gamarra [o.g.]           1           0\n",
       "1350      524       4         Pauleta           0           1\n",
       "1390      541       2            Gyan           0           1\n",
       "1400      547       4           Rusol           0           1\n",
       "1408      549       4           Klose           0           1\n",
       "1440      560       2            Srna           1           0\n",
       "1450      565       4        Podolski           1           0\n",
       "1505      591       3        PetrÃ¡Å¡           0           1\n",
       "1580      617       4         Gerrard           1           0\n",
       "1703      671       3         MÃ¼ller           0           1\n",
       "1729      680       4         Facundo           1           0\n",
       "1758      692       1          Albert           1           0\n",
       "1778      698       1            Mora           1           0\n",
       "1781      699       1          MaÅ¡ek           0           1\n",
       "1903      746       2   Neeskens [p.]           0           1\n",
       "1947      762       4       OâBrien           1           0\n",
       "1965      770       4        Nomvethe           1           0\n",
       "2002      785       4           RaÃºl           0           1\n",
       "2031      793       3       Olisadebe           1           0\n",
       "2060      809       1  Hakan ÅÃ¼kÃ¼r           1           0\n",
       "2088      817       2            Suat           0           1\n",
       "2093      818       4           Anoul           0           1\n",
       "2110      821       2       Stojaspal           1           0\n",
       "2111      821       4          Probst           2           0\n",
       "2120      823       3          Kocsis           1           0\n",
       "2177      831       4       Hidegkuti           1           0\n",
       "\n",
       "[67 rows x 5 columns]"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 2. Show goals scored in the first 5 minutes of a game\n",
    "goals[goals.minute < 5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>game_id</th>\n",
       "      <th>minute</th>\n",
       "      <th>player</th>\n",
       "      <th>team1score</th>\n",
       "      <th>team2score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2</td>\n",
       "      <td>93</td>\n",
       "      <td>Schall</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2</td>\n",
       "      <td>109</td>\n",
       "      <td>BiÄan</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2</td>\n",
       "      <td>118</td>\n",
       "      <td>Verriest [p.]</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>17</td>\n",
       "      <td>95</td>\n",
       "      <td>Schiavio</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>42</td>\n",
       "      <td>100</td>\n",
       "      <td>McParland</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>329</th>\n",
       "      <td>102</td>\n",
       "      <td>92</td>\n",
       "      <td>TrÃ©sor</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>330</th>\n",
       "      <td>102</td>\n",
       "      <td>98</td>\n",
       "      <td>Giresse</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331</th>\n",
       "      <td>102</td>\n",
       "      <td>102</td>\n",
       "      <td>Rummenigge</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>332</th>\n",
       "      <td>102</td>\n",
       "      <td>108</td>\n",
       "      <td>Fischer</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>429</th>\n",
       "      <td>136</td>\n",
       "      <td>101</td>\n",
       "      <td>Hurst</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>430</th>\n",
       "      <td>136</td>\n",
       "      <td>120</td>\n",
       "      <td>Hurst</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>591</th>\n",
       "      <td>256</td>\n",
       "      <td>102</td>\n",
       "      <td>Demol</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>592</th>\n",
       "      <td>256</td>\n",
       "      <td>108</td>\n",
       "      <td>Claesen</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>593</th>\n",
       "      <td>256</td>\n",
       "      <td>111</td>\n",
       "      <td>Belanov [p.]</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>626</th>\n",
       "      <td>269</td>\n",
       "      <td>104</td>\n",
       "      <td>Genghini</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>627</th>\n",
       "      <td>269</td>\n",
       "      <td>111</td>\n",
       "      <td>AmorÃ³s [p.]</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>637</th>\n",
       "      <td>272</td>\n",
       "      <td>94</td>\n",
       "      <td>Piola</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>652</th>\n",
       "      <td>275</td>\n",
       "      <td>103</td>\n",
       "      <td>Socorro</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>653</th>\n",
       "      <td>275</td>\n",
       "      <td>105</td>\n",
       "      <td>Dobai</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>662</th>\n",
       "      <td>276</td>\n",
       "      <td>93</td>\n",
       "      <td>LeÃ´nidas</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>663</th>\n",
       "      <td>276</td>\n",
       "      <td>104</td>\n",
       "      <td>LeÃ´nidas</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>664</th>\n",
       "      <td>276</td>\n",
       "      <td>118</td>\n",
       "      <td>Wilimowski</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>665</th>\n",
       "      <td>277</td>\n",
       "      <td>93</td>\n",
       "      <td>KoÅ¡Å¥Ã¡lek</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>666</th>\n",
       "      <td>277</td>\n",
       "      <td>111</td>\n",
       "      <td>Zeman</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>667</th>\n",
       "      <td>277</td>\n",
       "      <td>118</td>\n",
       "      <td>NejedlÃ½</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>920</th>\n",
       "      <td>353</td>\n",
       "      <td>102</td>\n",
       "      <td>R. Baggio [p.]</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>936</th>\n",
       "      <td>358</td>\n",
       "      <td>101</td>\n",
       "      <td>RÄducioiu</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>937</th>\n",
       "      <td>358</td>\n",
       "      <td>115</td>\n",
       "      <td>K. Andersson</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1077</th>\n",
       "      <td>413</td>\n",
       "      <td>113</td>\n",
       "      <td>Blanc [Golden Goal]</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1198</th>\n",
       "      <td>463</td>\n",
       "      <td>106</td>\n",
       "      <td>Milla</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1199</th>\n",
       "      <td>463</td>\n",
       "      <td>109</td>\n",
       "      <td>Milla</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1200</th>\n",
       "      <td>463</td>\n",
       "      <td>115</td>\n",
       "      <td>RedÃ­n</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1214</th>\n",
       "      <td>469</td>\n",
       "      <td>92</td>\n",
       "      <td>StojkoviÄ</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1215</th>\n",
       "      <td>470</td>\n",
       "      <td>119</td>\n",
       "      <td>Platt</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1222</th>\n",
       "      <td>474</td>\n",
       "      <td>105</td>\n",
       "      <td>Lineker [p.]</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1331</th>\n",
       "      <td>516</td>\n",
       "      <td>105</td>\n",
       "      <td>Kempes</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1332</th>\n",
       "      <td>516</td>\n",
       "      <td>116</td>\n",
       "      <td>Bertoni</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1454</th>\n",
       "      <td>566</td>\n",
       "      <td>98</td>\n",
       "      <td>Maxi RodrÃ­guez</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1471</th>\n",
       "      <td>577</td>\n",
       "      <td>119</td>\n",
       "      <td>Grosso</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1472</th>\n",
       "      <td>577</td>\n",
       "      <td>120</td>\n",
       "      <td>Del Piero</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1541</th>\n",
       "      <td>605</td>\n",
       "      <td>117</td>\n",
       "      <td>EspÃ¡rrago</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1557</th>\n",
       "      <td>608</td>\n",
       "      <td>108</td>\n",
       "      <td>MÃ¼ller</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1564</th>\n",
       "      <td>610</td>\n",
       "      <td>94</td>\n",
       "      <td>MÃ¼ller</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1565</th>\n",
       "      <td>610</td>\n",
       "      <td>98</td>\n",
       "      <td>Burgnich</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1566</th>\n",
       "      <td>610</td>\n",
       "      <td>104</td>\n",
       "      <td>Riva</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1567</th>\n",
       "      <td>610</td>\n",
       "      <td>110</td>\n",
       "      <td>MÃ¼ller</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1568</th>\n",
       "      <td>610</td>\n",
       "      <td>111</td>\n",
       "      <td>Rivera</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1681</th>\n",
       "      <td>662</td>\n",
       "      <td>93</td>\n",
       "      <td>Gyan</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1719</th>\n",
       "      <td>676</td>\n",
       "      <td>116</td>\n",
       "      <td>Iniesta</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2042</th>\n",
       "      <td>797</td>\n",
       "      <td>104</td>\n",
       "      <td>H. Camara [Golden Goal]</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2052</th>\n",
       "      <td>802</td>\n",
       "      <td>117</td>\n",
       "      <td>Ahn Jung-hwan [Golden Goal]</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2057</th>\n",
       "      <td>806</td>\n",
       "      <td>94</td>\n",
       "      <td>Ä°lhan [Golden Goal]</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2099</th>\n",
       "      <td>818</td>\n",
       "      <td>91</td>\n",
       "      <td>Lofthouse</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2100</th>\n",
       "      <td>818</td>\n",
       "      <td>93</td>\n",
       "      <td>Dickinson [o.g.]</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2189</th>\n",
       "      <td>833</td>\n",
       "      <td>111</td>\n",
       "      <td>Kocsis</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2190</th>\n",
       "      <td>833</td>\n",
       "      <td>116</td>\n",
       "      <td>Kocsis</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      game_id  minute                       player  team1score  team2score\n",
       "10          2      93                       Schall           2           1\n",
       "11          2     109                       BiÄan           3           1\n",
       "12          2     118                Verriest [p.]           3           2\n",
       "69         17      95                     Schiavio           2           1\n",
       "156        42     100                    McParland           2           1\n",
       "329       102      92                      TrÃ©sor           1           2\n",
       "330       102      98                      Giresse           1           3\n",
       "331       102     102                   Rummenigge           2           3\n",
       "332       102     108                      Fischer           3           3\n",
       "429       136     101                        Hurst           3           2\n",
       "430       136     120                        Hurst           4           2\n",
       "591       256     102                        Demol           2           3\n",
       "592       256     108                      Claesen           2           4\n",
       "593       256     111                 Belanov [p.]           3           4\n",
       "626       269     104                     Genghini           3           2\n",
       "627       269     111                 AmorÃ³s [p.]           4           2\n",
       "637       272      94                        Piola           2           1\n",
       "652       275     103                      Socorro           3           2\n",
       "653       275     105                        Dobai           3           3\n",
       "662       276      93                    LeÃ´nidas           5           4\n",
       "663       276     104                    LeÃ´nidas           6           4\n",
       "664       276     118                   Wilimowski           6           5\n",
       "665       277      93                  KoÅ¡Å¥Ã¡lek           1           0\n",
       "666       277     111                        Zeman           2           0\n",
       "667       277     118                     NejedlÃ½           3           0\n",
       "920       353     102               R. Baggio [p.]           1           2\n",
       "936       358     101                   RÄducioiu           2           1\n",
       "937       358     115                 K. Andersson           2           2\n",
       "1077      413     113          Blanc [Golden Goal]           1           0\n",
       "1198      463     106                        Milla           1           0\n",
       "1199      463     109                        Milla           2           0\n",
       "1200      463     115                       RedÃ­n           2           1\n",
       "1214      469      92                   StojkoviÄ           1           2\n",
       "1215      470     119                        Platt           1           0\n",
       "1222      474     105                 Lineker [p.]           3           2\n",
       "1331      516     105                       Kempes           2           1\n",
       "1332      516     116                      Bertoni           3           1\n",
       "1454      566      98              Maxi RodrÃ­guez           2           1\n",
       "1471      577     119                       Grosso           0           1\n",
       "1472      577     120                    Del Piero           0           2\n",
       "1541      605     117                   EspÃ¡rrago           1           0\n",
       "1557      608     108                      MÃ¼ller           3           2\n",
       "1564      610      94                      MÃ¼ller           1           2\n",
       "1565      610      98                     Burgnich           2           2\n",
       "1566      610     104                         Riva           3           2\n",
       "1567      610     110                      MÃ¼ller           3           3\n",
       "1568      610     111                       Rivera           4           3\n",
       "1681      662      93                         Gyan           1           2\n",
       "1719      676     116                      Iniesta           1           0\n",
       "2042      797     104      H. Camara [Golden Goal]           1           2\n",
       "2052      802     117  Ahn Jung-hwan [Golden Goal]           2           1\n",
       "2057      806      94         Ä°lhan [Golden Goal]           0           1\n",
       "2099      818      91                    Lofthouse           4           3\n",
       "2100      818      93             Dickinson [o.g.]           4           4\n",
       "2189      833     111                       Kocsis           3           2\n",
       "2190      833     116                       Kocsis           4           2"
      ]
     },
     "execution_count": 176,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 3. Show goals scored after the regulation 90 minutes is over\n",
    "goals[goals.minute > 90]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "player\n",
       "MÃ¼ller      20\n",
       "Klose        14\n",
       "Ronaldo      14\n",
       "Fontaine     13\n",
       "PelÃ©        12\n",
       "Kocsis       11\n",
       "Klinsmann    11\n",
       "Lato         10\n",
       "Rahn         10\n",
       "Ademir        9\n",
       "Name: player, dtype: int64"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 4. Show the top scoring players\n",
    "goals.groupby('player').player.count().sort_values(ascending = False).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x12438d050>"
      ]
     },
     "execution_count": 178,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n5y+loi8i0iEq+tma6ACFmugAhZroAIWa6ADZau+J156/lIq+iEiHqOhnS9EBCqXoAIVSdIBCKTpA\nttp74rXnL6WiLyLSISr62ZroAIWa6ACFmugAhZroANlq74nXnr+Uir6ISIeo6GdL0QEKpegAhVJ0\ngEIpOkC22nvitecvpaIvItIhKvrZmugAhZroAIWa6ACFmugA2Wrvideev5SKvohIh6joZ0vRAQql\n6ACFUnSAQik6QLbae+K15y+loi8i0iEq+tma6ACFmugAhZroAIWa6ADZau+J156/lIq+iEiHqOhn\nS9EBCqXoAIVSdIBCKTpAttp74rXnL6WiLyLSISr62ZroAIWa6ACFmugAhZroANlq74nXnr+Uir6I\nSIeo6GdL0QEKpegAhVJ0gEIpOkC22nvitecvpaIvItIhKvrZmugAhZroAIWa6ACFmugA2Wrvidee\nv5SKvohIh6joZ0vRAQql6ACFUnSAQik6QLbae+K15y+loi8i0iEq+tma6ACFmugAhZroAIWa6ADZ\nau+J156/lIq+iEiHFBV9M5s3s++Z2YNmdn+77ngz225mj5nZN83s2NFEnTYpOkChFB2gUIoOUChF\nB8hWe0+89vylSo/0DwKNu7/J3Te16y4Hdrj7GcA9wJbCOUREZERKi74t8xybgZva+zcB7ymcY0o1\n0QEKNdEBCjXRAQo10QGy1d4Trz1/qdKi78B/m9l3zOxD7br17r4A4O77gRML5xARkRFZVzj+HHf/\nmZm9GthuZo/R+0XQb+nyC+bm5nj66SeB64BvAxs5dASU2n+XXz54cO+SZzv89qNbXnQVw+Q9tC53\nvkG3H3S+lfLnzjeq8YMuXzXh+RaXc+dbXLe4POjrJ3++lNILR7WLfexRLPf3xMfx/ONeri1/Solt\n27YBMDs7SzF3H8kN2Ap8AthN72gfYAbYvcL27u5++umbHO518KFuRx11qQNDj+vdRjFuZ8Ccoxy3\nUv7c+Sb9Ne6cwn06zNiV9v/oso7Lzp07x/bck1B7/vZ7S+4tu71jZi8zs1e0918OnAs8AtwJzLWb\nfRC4I3eO6dZEByjURAco1EQHKNREB8hWe0+89vylSto764GvmZm3z/NFd99uZt8FbjOzi4DHgQtG\nkFNEREYg+0jf3X/i7hu9d7rm77v7J9v1v3D3d7r7Ge5+rrv/cnRxp0mKDlAoRQcolKIDFErRAbLV\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1240fc990>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 5. Show a histogram (distribution) of minutes with 20 bins\n",
    "goals.minute.hist(bins=20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x123c1b2d0>"
      ]
     },
     "execution_count": 185,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nAejv72d4ePjm07zFB8dy42azycLC1bZ7a1TfR245npqaYn5+vvb9b7Tx9PT0utrPRh87T4/Xy7jR\naDAxMQFws152SxHd1WdJ/wX4HvARYCQi5iQNAC9GxC5JY0BExLFq/fPAkYh4acn9RLfnbjc+Ps6h\nQ5e4fn2849q+viHOnz/B0NDQqs9nZrYeSCIiunrds867bv7F4jtqJL0VeBi4AJwERqtljwHPVccn\ngUcl3S3pXuA+YKqbTZmZWTp1evT/EnhR0jTwEnA6Ik4Bx4CHJV0EHgSeBIiIGeAEMAOcAh5f06W7\n1bL4VM/ScJ7pOMv8OvboI+JV4IFbzL8BPLTMbY4CR9e8OzMzWzN/MrYQiy/iWBrOMx1nmZ8LvZlZ\n4VzoC+E+aFrOMx1nmZ8LvZlZ4VzoC+E+aFrOMx1nmZ8LvZlZ4VzoC+E+aFrOMx1nmZ8LvZlZ4Vzo\nC+E+aFrOMx1nmZ8LvZlZ4VzoC+E+aFrOMx1nmZ8LvZlZ4VzoC+E+aFrOMx1nmZ8LvZlZ4VzoC+E+\naFrOMx1nmZ8LvZlZ4VzoC+E+aFrOMx1nmZ8LvZlZ4VzoC+E+aFrOMx1nmV/HQi9ph6Rzkr4i6VVJ\nH6vmt0g6I+mipNOSNrfd5rCkpqQLkvb28g9Q10//9IeQ1PFrYGAw91bNzJKqc0V/A/j1iBgCfgL4\nqKT3AWPA2YjYCZwDDgNI2g0cBHYB+4CnJKkXm+/GN75xBYiOX3Nzr2fb41q4D5qW80zHWebXsdBH\nxLWImK6OvwtcAHYA+4HJatkkcKA6fgQ4HhE3ImIWaAJ7Eu/bzMxq6qpHL2kQGAa+AGyLiDlo/WMA\nbK2WbQcut93sSjVnPeQ+aFrOMx1nmd+mugslvR34LPDxiPiupFiyZOm4o9HRUQYHBwHo7+9neHj4\n5tO8xQfHcuNms8nCwtW2e2tU30eWGS/OLffzBu06nX+9jaenp9fVfjb62Hl6vF7GjUaDiYkJgJv1\nsluK6FyfJW0C/hfwJxExXs1dAEYiYk7SAPBiROySNAZERByr1j0PHImIl5bcZ9Q593LGx8c5dOgS\n16+Pd1zb1zfEd74zQ71/i8Ra9mVm1kuSiIiuXves27r5Q2BmschXTgKj1fFjwHNt849KulvSvcB9\nwFQ3mzIzs3TqvL3yg8AvAT8r6RVJL0v6MHAMeFjSReBB4EmAiJgBTgAzwCng8TVdulsti0/1LA3n\nmY6zzK9jjz4i/hy4c5kfP7TMbY4CR9ewLzMzS8SfjC3E4os4lobzTMdZ5udCb2ZWOBf6QrgPmpbz\nTMdZ5udCb2ZWOBf6QrgPmpbzTMdZ5udCb2ZWOBf6QrgPmpbzTMdZ5udCb2ZWOBf6QrgPmpbzTMdZ\n5udCb2ZWOBf6QrgPmpbzTMdZ5udCb2ZWOBf6QrgPmpbzTMdZ5udCb2ZWOBf6QrgPmpbzTMdZ5udC\nb2ZWOBf6QrgPmpbzTMdZ5udCb2ZWuDr/Z+ynJM1J+nLb3BZJZyRdlHRa0ua2nx2W1JR0QdLeXm3c\n3sx90LScZzrOMr86V/RPAx9aMjcGnI2IncA54DCApN3AQWAXsA94SpLSbdfMzLrVsdBHxOeBby6Z\n3g9MVseTwIHq+BHgeETciIhZoAnsSbNVW4n7oGk5z3ScZX6r7dFvjYg5gIi4Bmyt5rcDl9vWXanm\nzMwsk1Qvxkai+7FVch80LeeZjrPMb9MqbzcnaVtEzEkaAL5ezV8B3tm2bkc1d0ujo6MMDg4C0N/f\nz/Dw8M2neYsPjuXGzWaThYWrbffWqL6PLDNenFvu5w3adTr/ehtPT0+vq/1s9LHz9Hi9jBuNBhMT\nEwA362W3FNH5YlzSIPC5iPhX1fgY8EZEHJP0CWBLRIxVL8Y+A3yAVsvmBeC9cYuTSLrVdG3j4+Mc\nOnSJ69fHO67t6xviO9+Zod4TD7GWfZmZ9ZIkIqKrN7l0vKKX9Glal70/JOlrwBHgSeAzkn4FeJ3W\nO22IiBlJJ4AZ4PvA42uq5mZmtmZ13nXzixHxjoh4S0S8KyKejohvRsRDEbEzIvZGxLfa1h+NiPsi\nYldEnOnt9vMaGBhEUsevgYHBnu9l8amepeE803GW+a22R2/A3Nzr1GkHzc35owRmlo9/BUIhFl/E\nsTScZzrOMj8XejOzwrnQF8J90LScZzrOMj8XejOzwrnQF8J90LScZzrOMj8XejOzwrnQF8J90LSc\nZzrOMj8X+tviLbU+WHW7PlxlZv+8+ANTt8U/UPcXfK72w1Xug6blPNNxlvn5it7MrHAu9IVwHzQt\n55mOs8zPhd7MrHAu9IVwHzQt55mOs8zPhd7MrHAu9IVwHzQt55mOs8zPhd7MrHB+H/0GNjAwWP3n\nJyvbtu3dXLs22/sNFcR95XScZX4u9BuY/4crM6ujZ60bSR+W9FVJfy3pE706jy1q5N5AUdxXTsdZ\n5teTQi/pDuC/AR8ChoBfkPS+XpzLFk2v8DP/rp1uTU+vlKd1w1nm16vWzR6gGRGvA0g6DuwHvtqj\n8xnfWuFnvf9dO6X51rdWytO64Szz61XrZjtwuW38N9WcFWJgYLAnzxLq3u+dd77Nz1LMatqwL8be\ndddd3HHHSfr6LnVc+/d//7XbsKPcZm/r2eq+ENxaW/9ZQt37XVhQ8vMvfRfTE088sezaO+64h4WF\n79W6343yrqe67+KC7v5Ms7P11lnvKKLeX5au7lT6ceC/RsSHq/EYEBFxrG1N+hObmf0zEBFd9Vh7\nVejvBC4CDwJXgSngFyLiQvKTmZnZinrSuomI/yfp14AztF4H+JSLvJlZHj25ojczs/Ujy++68Yep\n0pI0K+lLkl6RNJV7PxuJpE9JmpP05ba5LZLOSLoo6bSkzTn3uJEsk+cRSX8j6eXq68M597iRSNoh\n6Zykr0h6VdLHqvmuHqO3vdD7w1Q9sQCMRMT9EbEn92Y2mKdpPRbbjQFnI2IncA44fNt3tXHdKk+A\n34mIB6qv52/3pjawG8CvR8QQ8BPAR6t62dVjNMcV/c0PU0XE94HFD1PZ6gn/JtJViYjPA99cMr0f\nmKyOJ4EDt3VTG9gyeULrMWpdiohrETFdHX8XuADsoMvHaI7i4A9TpRfAC5K+KOlXc2+mAFsjYg5a\nf9GArZn3U4JfkzQt6Q/cClsdSYPAMPAFYFs3j1FfBZbhgxHxAPBztJ7a/VTuDRXG71hYm6eA90TE\nMHAN+J3M+9lwJL0d+Czw8erKfuljcsXHaI5CfwV4V9t4RzVnqxQRV6vv88CztNpjtnpzkrYBSBoA\nvp55PxtaRMzHP7697/eB9+fcz0YjaROtIv/fI+K5arqrx2iOQv9F4D5J75Z0N/AocDLDPoog6Z7q\nX3skvQ3YC7yWd1cbjnhzD/kkMFodPwY8t/QGtqI35VkVokX/Hj8+u/WHwExEjLfNdfUYzfI++urt\nVeP844epnrztmyiEpHtpXcUHrQ/APeM865P0aWAE+CFgDjgC/E/gM8A7gdeBgxHhX8FYwzJ5/gyt\n3vICrV/K9B8X+8u2MkkfBP4MeJXW3/EAfoPWbxs4Qc3HqD8wZWZWOL8Ya2ZWOBd6M7PCudCbmRXO\nhd7MrHAu9GZmhXOhNzMrnAu9mVnhXOjNzAr3/wGKRj/xRry+nAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x123cd3990>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 6. Show a histogram of the number of goals scored by players\n",
    "goals.groupby('player').player.count().hist(bins = 30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
